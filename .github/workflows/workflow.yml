name: CI/CD Pipeline
on:
  push:
    branches: 
      - main 

  pull_request:
    branches:
      - main
jobs:
  continuous-integration:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

        # Install Python Dependencies
      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run Flake8
        run: flake8 > flake8_output.txt
      
      - name: Read Flake8 Output
        id: read_flake8_output
        run: echo "::set-output name=flake8_output::$(cat flake8_output.txt)"
      
      - name: Comment on PR with Flake8 Results
        uses: softprops/action-gh-release@v1
        with:
          files: flake8_output.txt
          tag_name: flake8-results
          body: |
            **Flake8 Linting Results:**
      
            ```
            ${{ steps.read_flake8_output.outputs.flake8_output }}
            ```
        
        # Build App and Run Application Test
      - name: Build Application and Run unit Test
        run: python run.py & pytest --junitxml=test_results.xml
      
      - name: Comment on PR with Pytest Results
        uses: softprops/action-gh-release@v1
        with:
          files: test_results.xml
          tag_name: pytest-results
          body: |
            **Pytest Test Results:**

            ```
            ${{ steps.pytest_results.outputs.test_results }}
            ```

  continuous-deployment:
    runs-on: ubuntu-latest
    needs: [continuous-integration]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: sa-east-1

      - name: Create CodeDeploy Deployment
        id: deploy
        run: |
          # Assuming the Deployment Group is already setup
          aws deploy create-deployment \
            --application-name ci-cd-test-app \
            --deployment-group-name ci-cd-test-app-deployment-group \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --github-location repository=${{ github.repository }},commitId=${{ github.sha }}